<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://microtears.github.io</id>
    <title>YU-NO</title>
    <updated>2019-08-02T17:50:53.570Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://microtears.github.io"/>
    <link rel="self" href="https://microtears.github.io/atom.xml"/>
    <subtitle>岁月总是历久弥新，需要细细品尝。</subtitle>
    <logo>https://microtears.github.io/images/avatar.png</logo>
    <icon>https://microtears.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, YU-NO</rights>
    <entry>
        <title type="html"><![CDATA[Flutter Travis CI 脚本相关问题]]></title>
        <id>https://microtears.github.io/post/ZLJCVmnE2</id>
        <link href="https://microtears.github.io/post/ZLJCVmnE2">
        </link>
        <updated>2019-07-26T06:27:43.000Z</updated>
        <content type="html"><![CDATA[<h2 id="q1">Q1</h2>
<h2 id="报错信息">报错信息</h2>
<pre><code class="language-shell">$ openssl aes-256-cbc -K $encrypted_d2e7c15ed967_key -iv $encrypted_d2e7c15ed967_iv -in mood.jks.enc -out mood.jks -d
bad decrypt
140442486961824:error:0606506D:digital envelope routines:EVP_DecryptFinal_ex:wrong final block length:evp_enc.c:532:
The command &quot;openssl aes-256-cbc -K $encrypted_d2e7c15ed967_key -iv $encrypted_d2e7c15ed967_iv -in mood.jks.enc -out mood.jks -d&quot; failed and exited with 1 during.
Your build has been stopped.
</code></pre>
<h2 id="错误原因">错误原因</h2>
<blockquote>
<p>Caveat</p>
<p>There is a report of this function not working on a local Windows machine. Please use a Linux or OS X machine.</p>
</blockquote>
<h2 id="解决办法">解决办法</h2>
<p>在linux或mac os下运行<code>travis encrypt-file mood.jks --add</code>命令。</p>
<h2 id="q2">Q2</h2>
<h2 id="报错信息-2">报错信息</h2>
<pre><code class="language-shell">Please make sure you have the correct access rights
and the repository exists.
fatal: clone of 'git@github.com:microtears/asset_generator.git' into submodule path '/home/travis/build/microtears/Mood/asset_generator' failed
Failed to clone 'asset_generator'. Retry scheduled
Cloning into '/home/travis/build/microtears/Mood/asset_generator'...
Permission denied (publickey).
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
fatal: clone of 'git@github.com:microtears/asset_generator.git' into submodule path '/home/travis/build/microtears/Mood/asset_generator' failed
Failed to clone 'asset_generator' a second time, aborting
The command &quot;eval git submodule update --init --recursive &quot; failed. 
</code></pre>
<h2 id="错误原因-2">错误原因</h2>
<p>使用git协议的地址时候，自动使用了publickey进行了验证，由于该publickey并没有添加到github账户上，所以Permission denied (publickey).</p>
<h2 id="解决办法-2">解决办法</h2>
<p>如果项目中有submodule，则将其中所有使用git协议的url切换到https协议</p>
<h2 id="q3">Q3</h2>
<h2 id="报错信息-3">报错信息</h2>
<pre><code class="language-shell">No file or variants found for asset: assets/flare.
[   +1 ms] Error building assets
</code></pre>
<h2 id="错误原因-3">错误原因</h2>
<p>pubspec.yaml assets路径填写错误或者该路径下文件不存在。</p>
<h2 id="解决办法-3">解决办法</h2>
<p>将路径修改为正确的路径，清除那些实际不存在文件的路径。</p>
<h2 id="q4">Q4</h2>
<h2 id="报错信息-4">报错信息</h2>
<pre><code class="language-shell">&gt; Configure project :app
File /home/travis/.android/repositories.cfg could not be loaded.
Checking the license for package Android SDK Build-Tools 28.0.3 in /usr/local/android-sdk/licenses
Warning: License for package Android SDK Build-Tools 28.0.3 not accepted.
Checking the license for package Android SDK Platform 28 in /usr/local/android-sdk/licenses
Warning: License for package Android SDK Platform 28 not accepted.


FAILURE: Build failed with an exception.

* Where:
Build file '/home/travis/build/microtears/Mood/android/build.gradle' line: 25

* What went wrong:
A problem occurred evaluating root project 'android'.
&gt; A problem occurred configuring project ':app'.
   &gt; Failed to install the following Android SDK packages as some licences have not been accepted.
   	build-tools;28.0.3 Android SDK Build-Tools 28.0.3
   	platforms;android-28 Android SDK Platform 28
   To build this project, accept the SDK license agreements and install the missing components using the Android Studio SDK Manager.
   Alternatively, to transfer the license agreements from one workstation to another, see http://d.android.com/r/studio-ui/export-licenses.html

   Using Android SDK: /usr/local/android-sdk

   * Try:
   Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

   * Get more help at https://help.gradle.org

BUILD FAILED in 42s
</code></pre>
<h2 id="错误原因-4">错误原因</h2>
<blockquote>
<p>some licences have not been accepted.</p>
</blockquote>
<h2 id="解决办法-4">解决办法</h2>
<p>.travis.yml before_installs部分添加：</p>
<pre><code class="language-yaml">- touch $HOME/.android/repositories.cfg
- yes | sdkmanager &quot;platforms;android-28&quot;
- yes | sdkmanager &quot;build-tools;28.0.3&quot;
</code></pre>
<p>修改完成后如下：</p>
<pre><code class="language-yaml">
···

before_install:
- touch $HOME/.android/repositories.cfg
- yes | sdkmanager &quot;platforms;android-28&quot;
- yes | sdkmanager &quot;build-tools;28.0.3&quot;

···

</code></pre>
<h2 id="q5">Q5</h2>
<h2 id="报错信息-5">报错信息</h2>
<pre><code class="language-shell">0.00s$ touch $HOME/.android/repositories.cfg
0.01s$ yes | sdkmanager &quot;platforms;android-28&quot;
/home/travis/.travis/functions: line 104: sdkmanager: command not found
The command &quot;yes | sdkmanager &quot;platforms;android-28&quot;&quot; failed and exited with 127 during .
</code></pre>
<h2 id="错误原因-5">错误原因</h2>
<p>没有导出相应的环境变量</p>
<h2 id="解决办法-5">解决办法</h2>
<p>.travis.yml添加：<code>dist: trusty</code>，注意不要出现语法错误</p>
<h2 id="q6">Q6</h2>
<h2 id="报错信息-6">报错信息</h2>
<p>Travis CI 发布到Github Release的包没有包含apk</p>
<h2 id="错误原因-6">错误原因</h2>
<p>apk文件被清理了</p>
<h2 id="解决办法-6">解决办法</h2>
<p>.travis.yml deploy部分添加（注意provider为releases）：</p>
<pre><code class="language-yaml">skip_cleanup: true
</code></pre>
<p>修改完成后如下：</p>
<pre><code class="language-yaml">
···

deploy:
provider: releases
api_key:
  secure: ...
file: build/app/outputs/apk/release/app-release.apk
skip_cleanup: true
on:
  tags: true
  repo: microtears/Mood

···

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flutter路由退出动画]]></title>
        <id>https://microtears.github.io/post/flutter-lu-you-tui-chu-dong-hua</id>
        <link href="https://microtears.github.io/post/flutter-lu-you-tui-chu-dong-hua">
        </link>
        <updated>2019-07-22T00:30:03.000Z</updated>
        <summary type="html"><![CDATA[<p><code>secondaryAnimation</code>是ModalRoute类的一个get field，也实际存在于ModalRoute类中：<code>ProxyAnimation _secondaryAnimationProxy;</code>，另外我们还可以通过如下方式获取到<code>secondaryAnimation</code>对象：<code>ModalRoute.of(context).secondaryAnimation</code>。</p>
]]></summary>
        <content type="html"><![CDATA[<p><code>secondaryAnimation</code>是ModalRoute类的一个get field，也实际存在于ModalRoute类中：<code>ProxyAnimation _secondaryAnimationProxy;</code>，另外我们还可以通过如下方式获取到<code>secondaryAnimation</code>对象：<code>ModalRoute.of(context).secondaryAnimation</code>。</p>
<!-- more -->
<h1 id="flutter-secondaryanimation解析">Flutter secondaryAnimation解析</h1>
<h2 id="secondaryanimation出现在哪里">secondaryAnimation出现在哪里</h2>
<p><code>secondaryAnimation</code>是ModalRoute类的一个get field，也实际存在于ModalRoute类中：<code>ProxyAnimation _secondaryAnimationProxy;</code>，另外我们还可以通过如下方式获取到<code>secondaryAnimation</code>对象：<code>ModalRoute.of(context).secondaryAnimation</code>。</p>
<!-- more -->
<p>除此之外，我们一般还会在自定义<code>Route</code>的时候遇到它：</p>
<pre><code class="language-dart">PageRouteBuilder(
  pageBuilder: (BuildContext context, Animation animation, Animation secondaryAnimation) =&gt;
      WelcomePage(),
  transitionsBuilder: (BuildContext context, Animation&lt;double&gt; animation,
          Animation&lt;double&gt; secondaryAnimation, Widget child) =&gt;
      SlideTransition(
        position: Tween&lt;Offset&gt;(
          begin: Offset(0.0, 0.0),
          end: Offset(0.0, 0),
        ).animate(animation),
        child: SlideTransition(
          position: Tween&lt;Offset&gt;(
            begin: Offset(0.0, 0),
            end: Offset(0.0, -1.0),
          ).animate(secondaryAnimation),
          child: child,
        ),
      ),
  transitionDuration: Duration(milliseconds: 400),
);
</code></pre>
<p>对于<code>secondaryAnimation</code>，源码文档中对它的解释如下：</p>
<blockquote>
<p>When the [Navigator] pushes a route on the top of its stack, the<br>
[secondaryAnimation] can be used to define how the route that was on<br>
the top of the stack leaves the screen. Similarly when the topmost route<br>
is popped, the secondaryAnimation can be used to define how the route<br>
below it reappears on the screen. When the Navigator pushes a new route<br>
on the top of its stack, the old topmost route's secondaryAnimation<br>
runs from 0.0 to 1.0. When the Navigator pops the topmost route, the<br>
secondaryAnimation for the route below it runs from 1.0 to 0.0.</p>
</blockquote>
<p>上文是说<code>secondaryAnimation</code>是控制已经是top的<code>route</code>退出动画，但是当我在需要动画的页面按照文档里给的样例编写后，只有页面进入动画是正常的，前一个页面的退出动画并没有有所表现。后来在StackOverflow搜索相关问题后有人解释说是<code>secondaryAnimation</code>其实还是用于控制<code>pageBuilder</code>返回的Widget页面的退出动画，而不是我理解的前一个路由的动画，所以如果要对前后2个页面建立动画，前一个路由的退出动画应该由它自己负责，也就是我们应该对前一个路由利用<code>transitionsBuilder</code>为其创建退出动画，而不是在第二个路由页面创建。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flutter通过Completer将回调函数传值的方式转化为Future]]></title>
        <id>https://microtears.github.io/post/flutter-tong-guo-completer-jiang-hui-diao-han-shu-chuan-zhi-de-fang-shi-zhuan-hua-wei-future</id>
        <link href="https://microtears.github.io/post/flutter-tong-guo-completer-jiang-hui-diao-han-shu-chuan-zhi-de-fang-shi-zhuan-hua-wei-future">
        </link>
        <updated>2019-07-20T13:06:03.000Z</updated>
        <summary type="html"><![CDATA[<p>在今天编写vision类的时候，遇到这么一个问题，我们需要从<code>Image</code> Widget中获取到图像的二进制数据。观察过源码之后发现，<code>Image</code>是对<code>ImageProvider</code>中的数据流进行了注册监听，用到了回调。我们采用同样的方式去获取<code>ImageInfo</code>对象，虽然<code>ImagePrivider</code>对我们提供了<code>ImageStream</code>，但是<code>ImageStream</code>类并不是继承自<code>Stream</code>，所以对于<code>Stream</code>提供的那些方法自然不能奏效。只能采取<code>ImageStream</code>提供的方案：<code>ImageStreamListener</code>，但是这样一来我们就只能通过<code>ImageStreamListener</code>参数中的回调函数来处理返回的数据，这样既不利于我们思维理解，也不利于数据的处理，那么有没有一种办法是可以将这种回调方式转化为Future返回值呢？答案当然是存在这种办法的。</p>
]]></summary>
        <content type="html"><![CDATA[<p>在今天编写vision类的时候，遇到这么一个问题，我们需要从<code>Image</code> Widget中获取到图像的二进制数据。观察过源码之后发现，<code>Image</code>是对<code>ImageProvider</code>中的数据流进行了注册监听，用到了回调。我们采用同样的方式去获取<code>ImageInfo</code>对象，虽然<code>ImagePrivider</code>对我们提供了<code>ImageStream</code>，但是<code>ImageStream</code>类并不是继承自<code>Stream</code>，所以对于<code>Stream</code>提供的那些方法自然不能奏效。只能采取<code>ImageStream</code>提供的方案：<code>ImageStreamListener</code>，但是这样一来我们就只能通过<code>ImageStreamListener</code>参数中的回调函数来处理返回的数据，这样既不利于我们思维理解，也不利于数据的处理，那么有没有一种办法是可以将这种回调方式转化为Future返回值呢？答案当然是存在这种办法的。</p>
<!-- more -->
<p>解决方法如下：</p>
<pre><code class="language-dart">	final Completer&lt;ByteData&gt; completer = Completer();
    ImageStreamListener listener;
    listener = ImageStreamListener((ImageInfo image, bool synchronousCall) {
      completer.complete(image.image.toByteData());
      newStream.removeListener(listener);
    });
    newStream.addListener(listener);
    final bytes = (await completer.future).buffer.asUint8List();
    final visionImage = FirebaseVisionImage.fromBytes(
        bytes,
        FirebaseVisionImageMetadata(
          size: Size(widget.width, widget.height),
          rawFormat: null,
          planeData: null,
    ));
</code></pre>
<p>其中Dartlang中的<code>Completer</code>对象就可以将这种回调传值的方式转化为Future返回值，仔细想一下，是不是和Java中的<code>CountDownLatch</code>可以起到的作用是不是很类似呢。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flutter[Android]引入firebase时flutter run/(build apk)报错解决方法]]></title>
        <id>https://microtears.github.io/post/flutterandroidyin-ru-firebase-shi-cuo-wu-jie-jue-fang-fa</id>
        <link href="https://microtears.github.io/post/flutterandroidyin-ru-firebase-shi-cuo-wu-jie-jue-fang-fa">
        </link>
        <updated>2019-07-19T11:48:25.000Z</updated>
        <content type="html"><![CDATA[<p>当在flutter项目中引入了firebase组件后，运行以下命令：</p>
<ul>
<li><code>flutter run</code></li>
<li><code>flutter build apk</code></li>
</ul>
<p>会出现下文的报错信息。</p>
<pre><code class="language-plain">D8: Cannot fit requested classes in a single dex file (# methods: 84722 &gt; 65536)

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':app:transformDexArchiveWithExternalLibsDexMergerForRelease'.
&gt; com.android.builder.dexing.DexArchiveMergerException: Error while merging dex archives: 
PROJECT_PATH\build\app\intermediates\transforms\dexBuilder\release\0.jar,
PROJECT_PATHbuild\app\intermediates\transforms\dexBuilder\release\1.jar, 
PROJECT_PATH\build\app\intermediates\transforms\dexBuilder\release\2.jar,
PROJECT_PATH\build\app\intermediates\transforms\dexBuilder\release\3.jar,
···
PROJECT_PATH\build\app\intermediates\transforms\dexBuilder\release\319.jar
  The number of method references in a .dex file cannot exceed 64K.
  Learn how to resolve this issue at https://developer.android.com/tools/building/multidex.html

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Get more help at https://help.gradle.org

BUILD FAILED in 3m 4s
Running Gradle task 'assembleRelease'...
Running Gradle task 'assembleRelease'... Done                     186.7s (!)
Gradle task assembleRelease failed with exit code 1
</code></pre>
<p>其中有一句</p>
<blockquote>
<p>The number of method references in a .dex file cannot exceed 64K.<br>
Learn how to resolve this issue at https://developer.android.com/tools/building/multidex.html</p>
</blockquote>
<p>不仅告诉了我们错误原因，而且给出了解决办法。<br>
现在按照文档中的方案，在app/build.gradle内下下文部分做如下修改。</p>
<pre><code class="language-groovy"> defaultConfig {
        applicationId &quot;YOUR_APPLICATION_ID&quot;
        // minSdkVersion 16
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;
    }
</code></pre>
<p>然后重新运行命令。出现了如下报错信息。</p>
<pre><code class="language-plain">All com.android.support libraries must use the exact same version specification (mixing versions can lead to runtime crashes.
···
</code></pre>
<p>该问题是由于依赖库版本不一致引发的。本例中出问题的组件为<code>exifinterface</code>，<br>
解决办法是在project/build.gradle内结尾部分加入如下代码。</p>
<p><strong>不过，在最新的firebase组件中，不会再出现这个问题了，可以不进行这一步操作</strong></p>
<pre><code class="language-groovy">subprojects {
    project.configurations.all {
        resolutionStrategy.eachDependency { details -&gt;
            if (details.requested.name == 'exifinterface'  &amp;&amp; !details.requested.name.contains('multidex') ) {
                details.useVersion &quot;1.0.0&quot;
            }
        }
    }
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wrap改造：充满整行的流式布局]]></title>
        <id>https://microtears.github.io/post/wrap-gai-zao-chong-man-zheng-xing-de-liu-shi-bu-ju</id>
        <link href="https://microtears.github.io/post/wrap-gai-zao-chong-man-zheng-xing-de-liu-shi-bu-ju">
        </link>
        <updated>2019-07-14T23:50:09.000Z</updated>
        <content type="html"><![CDATA[<h2 id="效果展示">效果展示</h2>
<p><a href="https://imgchr.com/i/ZhKq4H"><img src="https://s2.ax1x.com/2019/07/13/ZhKq4H.md.png" alt="ZhKq4H.png" border="0" width="249"/></a></p>
<h2 id="关键代码">关键代码</h2>
<pre><code class="language-dart">@override
void performLayout() {
  assert(_debugHasNecessaryDirections);
  _hasVisualOverflow = false;
  RenderBox child = firstChild;
  if (child == null) {
    size = constraints.smallest;
    return;
  }
  BoxConstraints childConstraints;
  double mainAxisLimit = 0.0;
  bool flipMainAxis = false;
  bool flipCrossAxis = false;
  switch (direction) {
    case Axis.horizontal:
      childConstraints = BoxConstraints(maxWidth: constraints.maxWidth);
      mainAxisLimit = constraints.maxWidth;
      if (textDirection == TextDirection.rtl) flipMainAxis = true;
      if (verticalDirection == VerticalDirection.up) flipCrossAxis = true;
      break;
    case Axis.vertical:
      childConstraints = BoxConstraints(maxHeight: constraints.maxHeight);
      mainAxisLimit = constraints.maxHeight;
      if (verticalDirection == VerticalDirection.up) flipMainAxis = true;
      if (textDirection == TextDirection.rtl) flipCrossAxis = true;
      break;
  }
  assert(childConstraints != null);
  assert(mainAxisLimit != null);
  final double spacing = this.spacing;
  final double runSpacing = this.runSpacing;
  final List&lt;_RunMetrics&gt; runMetrics = &lt;_RunMetrics&gt;[];
  double mainAxisExtent = 0.0;
  double crossAxisExtent = 0.0;
  double runMainAxisExtent = 0.0;
  double runCrossAxisExtent = 0.0;
  int childCount = 0;
  //主轴宽度永远为mainAxisLimit
  mainAxisExtent = mainAxisLimit;
  while (child != null) {
    child.layout(childConstraints, parentUsesSize: true);
    double childMainAxisExtent = _getMainAxisExtent(child);
    double childCrossAxisExtent = _getCrossAxisExtent(child);
    if (childCount &gt; 0 &amp;&amp; runMainAxisExtent + spacing + childMainAxisExtent &gt; mainAxisLimit) {
      // 计算空余空间
      final mainAxisFreeSpace = mainAxisLimit - (runMainAxisExtent + spacing);
      // mainAxisExtent = math.max(mainAxisExtent, runMainAxisExtent);
      crossAxisExtent += runCrossAxisExtent;
      if (runMetrics.isNotEmpty) crossAxisExtent += runSpacing;
      final needFillSpace = mainAxisFreeSpace &gt; 0.0;
      // debugPrint(&quot;index=$childCount,freeSize=$mainAxisFreeSpace,&quot;
      //     &quot;needFillLast=$needFillSpace,&quot;);
      // 如果剩余空间为0，那么不必处理剩余空间
      if (!needFillSpace) {
        runMetrics.add(_RunMetrics(runMainAxisExtent, runCrossAxisExtent, childCount));
      }
      // 否则
      else {
        // 重新调整runCrossAxisExtent
        runCrossAxisExtent = math.max(runCrossAxisExtent, childCrossAxisExtent);
        // 重新调整childCount
        childCount += 1;
        // 每一行矩形右下角坐标(x,y,widget index)=&gt;(mainAxisExtent,runCrossAxisExtent,childCount)
        // x==mainAxisExtent意味着充满这一行
        runMetrics.add(_RunMetrics(mainAxisExtent, runCrossAxisExtent, childCount));
        // 修复最后一个Widget的尺寸
        BoxConstraints spaceConstraints;
        switch (direction) {
          case Axis.horizontal:
            spaceConstraints = BoxConstraints(maxWidth: mainAxisFreeSpace);
            break;
          case Axis.vertical:
            spaceConstraints = BoxConstraints(maxHeight: mainAxisFreeSpace);
            break;
        }
        child.layout(spaceConstraints, parentUsesSize: true);
        // 跳过下一个child，我们会将它安排在本行末,并修正它所在的行数
        final FilledWrapParentData childParentData = child.parentData;
        childParentData._runIndex = runMetrics.length - 1;
        child = childParentData.nextSibling;
        if (child == null) break;
        // 重新测量新的child
        child.layout(childConstraints, parentUsesSize: true);
        childMainAxisExtent = _getMainAxisExtent(child);
        childCrossAxisExtent = _getCrossAxisExtent(child);
      }
      runMainAxisExtent = 0.0;
      runCrossAxisExtent = 0.0;
      childCount = 0;
    }
    runMainAxisExtent += childMainAxisExtent;
    if (childCount &gt; 0) runMainAxisExtent += spacing;
    runCrossAxisExtent = math.max(runCrossAxisExtent, childCrossAxisExtent);
    childCount += 1;
    final FilledWrapParentData childParentData = child.parentData;
    childParentData._runIndex = runMetrics.length;
    child = childParentData.nextSibling;

    ···
}
</code></pre>
<h3 id="下一个计划">下一个计划</h3>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3220301"><label class="task-list-item-label" for="task-item-3220301"> 补完这份文档</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3657420"><label class="task-list-item-label" for="task-item-3657420"> 优化FilledWrap填充逻辑</label></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CI 脚本运行错误]]></title>
        <id>https://microtears.github.io/post/x8zF1RJPq</id>
        <link href="https://microtears.github.io/post/x8zF1RJPq">
        </link>
        <updated>2019-07-11T19:04:12.000Z</updated>
        <content type="html"><![CDATA[<h2 id="报错信息">报错信息</h2>
<pre><code class="language-shell">$ openssl aes-256-cbc -K $encrypted_d2e7c15ed967_key -iv $encrypted_d2e7c15ed967_iv -in mood.jks.enc -out mood.jks -d
bad decrypt
140442486961824:error:0606506D:digital envelope routines:EVP_DecryptFinal_ex:wrong final block length:evp_enc.c:532:
The command &quot;openssl aes-256-cbc -K $encrypted_d2e7c15ed967_key -iv $encrypted_d2e7c15ed967_iv -in mood.jks.enc -out mood.jks -d&quot; failed and exited with 1 during.
Your build has been stopped.
</code></pre>
<h2 id="错误原因">错误原因</h2>
<blockquote>
<p>Caveat</p>
<p>There is a report of this function not working on a local Windows machine. Please use a Linux or OS X machine.</p>
</blockquote>
<h2 id="解决办法">解决办法</h2>
<p>在linux或mac os下运行<code>travis encrypt-file mood.jks --add</code>命令。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git 使用记录]]></title>
        <id>https://microtears.github.io/post/git-shi-yong-ji-lu</id>
        <link href="https://microtears.github.io/post/git-shi-yong-ji-lu">
        </link>
        <updated>2019-02-16T00:41:15.000Z</updated>
        <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>Command</th>
<th>Function</th>
</tr>
</thead>
<tbody>
<tr>
<td>git init</td>
<td>创建版本库</td>
</tr>
<tr>
<td>git clone [PATH]</td>
<td>克隆仓库</td>
</tr>
<tr>
<td>git add [NAME]</td>
<td>添加到暂存区</td>
</tr>
<tr>
<td>git commit -m [MESSAGE]</td>
<td>提交暂存区</td>
</tr>
<tr>
<td>git push [ORIGN] [MASTER]</td>
<td>推送本地分支到远程分支</td>
</tr>
<tr>
<td>git push -u [ORIGN] [MASTER]</td>
<td>推送本地分支到远程分支并关联</td>
</tr>
<tr>
<td>git remote</td>
<td>显示远程库</td>
</tr>
<tr>
<td>git remote -v</td>
<td>显示远程库（详细信息）</td>
</tr>
<tr>
<td>git remoter add [ORIGN] [SERVER]</td>
<td>连接到远程仓库</td>
</tr>
<tr>
<td>git checkout [BRANCH]</td>
<td>切换分支</td>
</tr>
<tr>
<td>git checkout -b [BRANCH]</td>
<td>创建并切换分支</td>
</tr>
<tr>
<td>git checkout -b [BRANCH] [REMOTE]</td>
<td>创建并切换远程仓库分支的本地分支</td>
</tr>
<tr>
<td>git checkout -- [FILENAME]</td>
<td>用HEAD中的最新内容替换工作区文件/撤销修改</td>
</tr>
<tr>
<td>git branch</td>
<td>查看分支</td>
</tr>
<tr>
<td>git branch [BRANCH]</td>
<td>创建分支</td>
</tr>
<tr>
<td>git branch -d [BRANCH]</td>
<td>删除分支</td>
</tr>
<tr>
<td>git branch -D [BRANCH]</td>
<td>强制删除分支</td>
</tr>
<tr>
<td>git branch --set-upstream-to=[ORGIN] [BRANCH]</td>
<td>链接远程分支与本地分支</td>
</tr>
<tr>
<td>git pull</td>
<td>更新本地仓库至最新（fetch+merge）</td>
</tr>
<tr>
<td>git merge  [BRANCH]</td>
<td>合并其他分支到当前分支</td>
</tr>
<tr>
<td>git merge --no-ff -m [MESSAGE] [BRANCH]</td>
<td>合并其他分支到当前分支（禁用Fast forward）</td>
</tr>
<tr>
<td>git reset HEAD [FILENAME]</td>
<td>将暂存区的修改撤回</td>
</tr>
<tr>
<td>git log</td>
<td>查看提交日志</td>
</tr>
<tr>
<td>git log --graph</td>
<td>分支合并图</td>
</tr>
<tr>
<td>git reflog</td>
<td>查看命令日志</td>
</tr>
<tr>
<td>git reset --hard HEAD<sup>/HEAD</sup>^</td>
<td>回退到上一个/上上个版本</td>
</tr>
<tr>
<td>git reset --hard [COMMITID]</td>
<td>回退到指定版本</td>
</tr>
<tr>
<td>git status</td>
<td>查看工作区</td>
</tr>
<tr>
<td>git rm [FILE]</td>
<td>删除文件（包括本地）</td>
</tr>
<tr>
<td>git rm --cached [FILE]</td>
<td>删除文件（暂存区）</td>
</tr>
<tr>
<td>git rm -r [PATH]</td>
<td>删除文件夹（包括本地）</td>
</tr>
<tr>
<td>git rm -r  --cached [PATH]</td>
<td>删除文件夹（暂存区）</td>
</tr>
<tr>
<td>git stash</td>
<td>保存当前工作区</td>
</tr>
<tr>
<td>git stash list</td>
<td>查看保存的工作区</td>
</tr>
<tr>
<td>git stash apply</td>
<td>恢复工作区</td>
</tr>
<tr>
<td>git stash drop</td>
<td>删除保存的工作区</td>
</tr>
<tr>
<td>git stash pop</td>
<td>恢复并删除工作区</td>
</tr>
<tr>
<td>git stash apply [STASH]</td>
<td>恢复指定工作区</td>
</tr>
<tr>
<td>git rebase</td>
<td></td>
</tr>
<tr>
<td>git config --global color.ui true</td>
<td>开启彩色模式</td>
</tr>
<tr>
<td>git config --global user.name [NAME]</td>
<td>你的名字</td>
</tr>
<tr>
<td>git config --global user.email [EMAIL]</td>
<td>你的email</td>
</tr>
<tr>
<td>git check-ignore</td>
<td>检查gitignore</td>
</tr>
<tr>
<td>git config --global alias.[ALIAS] [COMMAND]</td>
<td>配置别名</td>
</tr>
</tbody>
</table>
<pre><code class="language-mermaid">graph LR;
fork((Fork))--&gt;ch((Change));
ch((Change))--&gt;pr((Pull Request));
class fork,ch,pr CN;
classDef CN  fill:#f9ffff,stroke:#333,stroke-width:8px;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hide Desktop Icon[AutoHotKey]]]></title>
        <id>https://microtears.github.io/post/hide-desktop-iconautohotkey</id>
        <link href="https://microtears.github.io/post/hide-desktop-iconautohotkey">
        </link>
        <updated>2019-02-12T10:43:37.000Z</updated>
        <summary type="html"><![CDATA[<pre><code class="language-autohotkey">/* Library:
 *      Hide Desktop Icon
 * Description:
 *      Hide the desktop icon by double clicking the right mouse button
 * Warnning:
 *      None.
 * Version:
 *      v1.0.5
 * Author:
 *      泠音
 */</code></pre>
]]></summary>
        <content type="html"><![CDATA[<pre><code class="language-autohotkey">/* Library:
 *      Hide Desktop Icon
 * Description:
 *      Hide the desktop icon by double clicking the right mouse button
 * Warnning:
 *      None.
 * Version:
 *      v1.0.5
 * Author:
 *      泠音
 */

&lt;!-- more --&gt;

intInterval:=300
~RButton::
    If(A_PriorHotkey &lt;&gt; &quot;~RBUtton&quot; or A_TimeSincePriorHotkey &gt; intInterval){
        KeyWait, RButton
        return
    }
If(check()){
    HideOrShowDesktopIcons()
    Sleep, 40
    Send, {Esc}
    return
}

check(){
    MouseGetPos,X,Y,ID,CLASS
    return CLASS==&quot;SysListView321&quot; 
        or CLASS==&quot;SHELLDLL_DefView1&quot;
        or CLASS==&quot;&quot;
        or WinExist(&quot;ahk_class WorkerW&quot; . &quot; ahk_id &quot; . CLASS)
}

HideOrShowDesktopIcons()
{
	ControlGet, class, Hwnd,, SysListView321, ahk_class Progman
	If class =
		ControlGet, class, Hwnd,, SysListView321, ahk_class WorkerW
 
	If DllCall(&quot;IsWindowVisible&quot;, UInt,class)
		WinHide, ahk_id %class%
	Else
		WinShow, ahk_id %class%
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quick Switch Virtual Desktop[AutoHotkey]]]></title>
        <id>https://microtears.github.io/post/quick-switch-virtual-desktopautohotkey</id>
        <link href="https://microtears.github.io/post/quick-switch-virtual-desktopautohotkey">
        </link>
        <updated>2019-02-12T02:06:10.000Z</updated>
        <summary type="html"><![CDATA[<pre><code class="language-autohotkey">/* Library:
 *      Quick Switch Virtual Desktop
 * Description:
 *      在屏幕四周，任务栏，桌面上使用鼠标滚轮来切换虚拟桌面。
 * Warnning:
 *      None.
 * Version:
 *      v1.0.3
 * Author:
 *      泠音
 */</code></pre>
]]></summary>
        <content type="html"><![CDATA[<pre><code class="language-autohotkey">/* Library:
 *      Quick Switch Virtual Desktop
 * Description:
 *      在屏幕四周，任务栏，桌面上使用鼠标滚轮来切换虚拟桌面。
 * Warnning:
 *      None.
 * Version:
 *      v1.0.3
 * Author:
 *      泠音
 */

&lt;!-- more --&gt;

#MaxHotkeysPerInterval 300
WheelUp::
    If (isHook()){
        Send, {LWinDown}{CtrlDown}{Left Down}{LWinUp}{CtrlUp}{Left Up}
    }else{
        MouseClick, WheelUp
    }
    return

WheelDown::
    If (isHook()){
        Send, {LWinDown}{CtrlDown}{Right Down}{LWinUp}{CtrlUp}{Right Up}
    }else{
        MouseClick, WheelDown
    }
    return

isHook(){
    CoordMode, Mouse,Screen
    MouseGetPos, X,Y,ID,CLASS
    ; t1 := A_ScreenWidth-X
    ; t2 := A_ScreenHeight-Y
    ; MsgBox X:%X% Y:%Y% dw:%t1% dh:%t2% W:%A_ScreenWidth% H:%A_ScreenHeight%
    return MouseIsOver(&quot;ahk_class WorkerW&quot;) 
        or MouseIsOver(&quot;ahk_class Shell_TrayWnd&quot;) 
        or X == 0 
        or Y == 0
        or A_ScreenWidth-X&lt;2
        or A_ScreenHeight-Y&lt;2
}

MouseIsOver(WinTitle) {
    MouseGetPos,,, Win
    return WinExist(WinTitle . &quot; ahk_id &quot; . Win)
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaFx中Controller获取Stage并自定义窗口移动与缩放逻辑]]></title>
        <id>https://microtears.github.io/post/javafx-zhong-controller-huo-qu-stage-bing-zi-ding-yi-chuang-kou-yi-dong-yu-suo-fang-luo-ji</id>
        <link href="https://microtears.github.io/post/javafx-zhong-controller-huo-qu-stage-bing-zi-ding-yi-chuang-kou-yi-dong-yu-suo-fang-luo-ji">
        </link>
        <updated>2019-02-05T04:21:10.000Z</updated>
        <summary type="html"><![CDATA[<p>由于去掉了平台自带了标题栏，窗口就无法移动和缩放了，需要我们自己来实现。</p>
]]></summary>
        <content type="html"><![CDATA[<p>由于去掉了平台自带了标题栏，窗口就无法移动和缩放了，需要我们自己来实现。</p>
<!-- more -->
<h2 id="去除窗口标题栏">去除窗口标题栏</h2>
<pre><code class="language-java">public class Main extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception {
        Parent root = FXMLLoader.load(getClass().getResource(&quot;main.fxml&quot;));
        primaryStage.setTitle(&quot;main&quot;);
        // 主要是这一句
        primaryStage.initStyle(StageStyle.TRANSPARENT);
        primaryStage.setScene(new Scene(root));
        primaryStage.show();
    }


    public static void main(String[] args) {
        launch(args);
    }
}
</code></pre>
<h2 id="在controller中获取stage">在Controller中获取Stage</h2>
<p>首先确定在Controller中获取到你的跟布局对象，如下：</p>
<pre><code class="language-java">public class Controller implements Initializable {
    public BorderPane root;
    private Stage stage;
}
</code></pre>
<pre><code class="language-xml">&lt;BorderPane fx:id=&quot;root&quot; maxHeight=&quot;-Infinity&quot; maxWidth=&quot;-Infinity&quot; minHeight=&quot;-Infinity&quot; minWidth=&quot;-Infinity&quot; prefHeight=&quot;400.0&quot; prefWidth=&quot;600.0&quot; stylesheets=&quot;@../css/main.css&quot; xmlns=&quot;http://javafx.com/javafx/8.0.172-ea&quot; xmlns:fx=&quot;http://javafx.com/fxml/1&quot; fx:controller=&quot;line.main.Controller&quot;&gt;
      &lt;!--其他布局元素--&gt;
&lt;/BorderPane&gt;
</code></pre>
<p>然后可以在<code>public void initialize(URL url, ResourceBundle resourceBundle)</code>方法内获取Stage</p>
<pre><code class="language-java">public class Controller implements Initializable {
    public BorderPane root;
    private Stage stage;

    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {
       var stage = getStage();
    }

    private Stage getStage() {
        if (stage == null) {
            stage = (Stage) root.getScene().getWindow();
        }
        return stage;
    }

}
</code></pre>
<h2 id="自定义窗体移动与缩放逻辑">自定义窗体移动与缩放逻辑</h2>
<ol>
<li>记录鼠标坐标<pre><code class="language-java"> root.setOnMousePressed(event -&gt; {
            event.consume();
            xOffset = event.getSceneX();
            yOffset = event.getSceneY();
        });
</code></pre>
</li>
<li>自定义移动控制区域<pre><code class="language-java">dragArea.setOnMouseDragged(event -&gt; {
            event.consume();
            var stage = getStage();
            stage.setX(event.getScreenX() - xOffset);
            stage.setY(event.getScreenY() - yOffset);
        });
</code></pre>
</li>
<li>判断鼠标坐标位置，并处理光标变换<pre><code class="language-java">root.setOnMouseMoved(this::mouseMoveHandle);

 private void mouseMoveHandle(MouseEvent event) {
        event.consume();
        double x = event.getSceneX();
        double y = event.getSceneY();
        var stage = getStage();
        double width = stage.getWidth();
        double height = stage.getHeight();
        Cursor cursorType = Cursor.DEFAULT;
        bit = 0;
        if (y &gt;= height - RESIZE_WIDTH) {
            if (x &lt;= RESIZE_WIDTH) {
                bit |= 1 &lt;&lt; 3;
            } else if (x &gt;= width - RESIZE_WIDTH) {
                bit |= 1;
                bit |= 1 &lt;&lt; 2;
                cursorType = Cursor.SE_RESIZE;
            } else {
                bit |= 1;
                cursorType = Cursor.S_RESIZE;
            }
        } else if (x &gt;= width - RESIZE_WIDTH) {
            bit |= 1 &lt;&lt; 2;
            cursorType = Cursor.E_RESIZE;
        }
        root.setCursor(cursorType);
    }
</code></pre>
</li>
<li>处理窗口缩放<pre><code class="language-java">root.setOnMouseDragged(this::mouseDraggedHandle);

private void mouseDraggedHandle(MouseEvent event) {
    event.consume();
    var primaryStage = getStage();
    double x = event.getSceneX();
    double y = event.getSceneY();
    double nextX = primaryStage.getX();
    double nextY = primaryStage.getY();
    double nextWidth = primaryStage.getWidth();
    double nextHeight = primaryStage.getHeight();
    if ((bit &amp; 1 &lt;&lt; 2) != 0) {
        nextWidth = x;
    }
    if ((bit &amp; 1) != 0) {
        nextHeight = y;
    }
    if (nextWidth &lt;= MIN_WIDTH) {
        nextWidth = MIN_WIDTH;
    }
    if (nextHeight &lt;= MIN_HEIGHT) {
        nextHeight = MIN_HEIGHT;
    }
    primaryStage.setX(nextX);
    primaryStage.setY(nextY);
    primaryStage.setWidth(nextWidth);
    primaryStage.setHeight(nextHeight);
}
</code></pre>
</li>
</ol>
<h2 id="完整代码">完整代码</h2>
<pre><code class="language-java">package line.main;

import javafx.fxml.Initializable;
import javafx.scene.Cursor;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;

import java.net.URL;
import java.util.ResourceBundle;

public class Controller implements Initializable {
    public BorderPane root;
    public Pane dragArea;
    private Stage stage;
    private double xOffset = 0;
    private double yOffset = 0;
    private int bit = 0;//left,right,top,bottom
    private static final double RESIZE_WIDTH = 5.00;
    private static final double MIN_WIDTH = 600.00;
    private static final double MIN_HEIGHT = 400.00;

    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {
        dragArea.setOnMouseDragged(event -&gt; {
            event.consume();
            var stage = getStage();
            stage.setX(event.getScreenX() - xOffset);
            stage.setY(event.getScreenY() - yOffset);
        });
        root.setOnMousePressed(event -&gt; {
            event.consume();
            xOffset = event.getSceneX();
            yOffset = event.getSceneY();
        });
        root.setOnMouseMoved(this::mouseMoveHandle);
        root.setOnMouseDragged(this::mouseDraggedHandle);
    }

    private Stage getStage() {
        if (stage == null) {
            stage = (Stage) root.getScene().getWindow();
        }
        return stage;
    }

    private void mouseMoveHandle(MouseEvent event) {
        event.consume();
        double x = event.getSceneX();
        double y = event.getSceneY();
        var stage = getStage();
        double width = stage.getWidth();
        double height = stage.getHeight();
        Cursor cursorType = Cursor.DEFAULT;
        bit = 0;
        if (y &gt;= height - RESIZE_WIDTH) {
            if (x &lt;= RESIZE_WIDTH) {
                bit |= 1 &lt;&lt; 3;
            } else if (x &gt;= width - RESIZE_WIDTH) {
                bit |= 1;
                bit |= 1 &lt;&lt; 2;
                cursorType = Cursor.SE_RESIZE;
            } else {
                bit |= 1;
                cursorType = Cursor.S_RESIZE;
            }
        } else if (x &gt;= width - RESIZE_WIDTH) {
            bit |= 1 &lt;&lt; 2;
            cursorType = Cursor.E_RESIZE;
        }
        root.setCursor(cursorType);
    }

    private void mouseDraggedHandle(MouseEvent event) {
        event.consume();
        var primaryStage = getStage();
        double x = event.getSceneX();
        double y = event.getSceneY();
        double nextX = primaryStage.getX();
        double nextY = primaryStage.getY();
        double nextWidth = primaryStage.getWidth();
        double nextHeight = primaryStage.getHeight();
        if ((bit &amp; 1 &lt;&lt; 2) != 0) {
            nextWidth = x;
        }
        if ((bit &amp; 1) != 0) {
            nextHeight = y;
        }
        if (nextWidth &lt;= MIN_WIDTH) {
            nextWidth = MIN_WIDTH;
        }
        if (nextHeight &lt;= MIN_HEIGHT) {
            nextHeight = MIN_HEIGHT;
        }
        primaryStage.setX(nextX);
        primaryStage.setY(nextY);
        primaryStage.setWidth(nextWidth);
        primaryStage.setHeight(nextHeight);
    }
}

</code></pre>
]]></content>
    </entry>
</feed>